{"version":3,"sources":["styles/combine-styles.js","statistics/distribution-math.js","utils/validation.js","model/dist-param.js","distributions/discrete-distribution.js","styles/form-styles.js","styles/grid-styles.js","statistics/discrete/binomial.js","distributions/Binomial.js","statistics/discrete/geometric.js","distributions/Geometric.js","statistics/discrete/negative_binomial.js","distributions/NegativeBinomial.js","statistics/discrete/poisson.js","distributions/Poisson.js","App.js","serviceWorker.js","index.js"],"names":["combineStyles","styles","theme","map","arg","reduce","acc","val","Object","assign","nChooseK","n","k","res","i","factorialCache","validate","value","toCompare","compareFunc","DistributionParam","name","min","max","this","f","s","valid","message","ComponentDistributionParam","description","defaultValue","DiscreteDistribution","props","paramsMap","defaultParams","param","state","params","mean","variance","std","pmf","cdf","handleChange","bind","newMean","setState","newVariance","newStd","event","id","target","newValue","updateStatistics","drawChart","keys","result","par","isValid","isAllParamValid","makePmfArray","sum","length","makeCdfFromPmf","classes","Typography","style","paddingLeft","paddingTop","variant","color","noWrap","className","form_root","noValidate","autoComplete","TextField","key","type","label","onChange","error","helperText","Button","width","onClick","disabled","grid_root","Grid","container","spacing","alignContent","item","xs","grid_names","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","inputProps","readOnly","React","Component","withStyles","_","flexGrow","textAlign","binomial","Error","p","Math","pow","sqrt","var","Binomial","prob","push","toString","makePmf","geometric","Geometric","negative_binomial","r","NegativeBinomial","parseInt","poisson","lambda","E","prev","cachedFactorial","Poisson","distrMap","jcx","createMuiTheme","palette","primary","blue","secondary","main","App","currentGraph","sideOpen","discrete","handleSelectDistribution","toggleDrawer","collapseDiscrete","ThemeProvider","Drawer","anchor","open","onClose","role","list","ListItem","button","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","distr","nested","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","title","root","marginRight","fullList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c7c9120.chunk.js","sourcesContent":["function combineStyles(...styles) {\n    return function CombineStyles(theme) {\n        const outStyles = styles.map(arg => {\n            // Apply the \"theme\" object for style functions.\n            if (typeof arg === \"function\") {\n                return arg(theme);\n            }\n            // Objects need no change.\n            return arg;\n        });\n\n        return outStyles.reduce((acc, val) => Object.assign(acc, val));\n    };\n}\n\nexport default combineStyles;","function makeCdfFromPmf(pmf) {\n    const cdf = [];\n    let sum = 0;\n    for (let i = 0; i < pmf.length; i++) {\n        sum += pmf[i]['prob'];\n        cdf[i] = {'name': pmf[i]['name'], 'prob': sum};\n    }\n    return cdf;\n}\n\nfunction nChooseK(n, k) {\n    let res = 1;\n    if (k > n - k)\n        k = n - k;\n    for (let i = 0; i < k; ++i) {\n        res *= (n - i);\n        res /= (i + 1);\n    }\n    return res;\n}\n\nfunction factorial(k) {\n    if (k === 0) return 1;\n    let result = 1;\n    while (k > 1) {\n        result *= k;\n        k--;\n    }\n    return result;\n}\n\nconst factorialCache = [];\n\nfunction cachedFactorial(k) {\n    if (k < 0) throw new Error(\"K must be non negative\");\n    if (k > 50) {\n        throw new Error(\"Max value of param k is 50\");\n    }\n    if (factorialCache.length < 1) {\n        factorialCache.push(1.0);\n        for (let i = 1; i <= 50; i++) {\n            const prev = factorialCache[i - 1];\n            factorialCache.push(prev * i);\n        }\n    }\n    return factorialCache[k];\n}\n\nexport {makeCdfFromPmf, nChooseK, factorial, cachedFactorial}","function validate(value, toCompare, compareFunc) {\n    if (typeof toCompare !== 'undefined' && value) {\n        return compareFunc(value, toCompare);\n    } else return true;\n}\n\nexport {validate}","import {validate} from \"../utils/validation\"\n\nclass DistributionParam {\n    name;\n    value;\n    min;\n    max;\n\n    constructor(name, value, min, max) {\n        this.name = name;\n        this.value = value;\n        this.min = min;\n        this.max = max;\n    }\n\n    get isValid() {\n        if (!validate(this.value, this.min, (f, s) => f >= s)) {\n            return {valid: false, message: `Value should be greater than ${this.min}`}\n        } else if (!validate(this.value, this.max, (f, s) => f <= s)) {\n            return {valid: false, message: `Value should be less than ${this.max}`}\n        } else {\n            return {valid: true, message: \"\"};\n        }\n    }\n\n}\n\nclass ComponentDistributionParam {\n    name;\n    description;\n    defaultValue;\n    min;\n    max;\n\n    constructor(name, description, defaultValue, min, max) {\n        this.name = name;\n        this.description = description;\n        this.defaultValue = defaultValue;\n        this.min = min;\n        this.max = max;\n    }\n}\n\nexport {DistributionParam, ComponentDistributionParam}","import React from \"react\";\nimport {formStyles} from \"../styles/form-styles\";\nimport {withStyles} from '@material-ui/core/styles';\nimport combineStyles from \"../styles/combine-styles\";\nimport {gridStyles} from \"../styles/grid-styles\";\nimport {makeCdfFromPmf} from \"../statistics/distribution-math\";\nimport {DistributionParam} from \"../model/dist-param\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Bar, BarChart, CartesianGrid, Tooltip, XAxis, YAxis} from \"recharts\";\nimport Typography from '@material-ui/core/Typography';\n\n\nclass DiscreteDistribution extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const paramsMap = {};\n        for (const param of props.defaultParams) {\n            paramsMap[param.name] = new DistributionParam(param.name, param.defaultValue, param.min, param.max)\n        }\n        this.state = {\n            params: paramsMap,\n            mean: 0,\n            variance: 0,\n            std: 0,\n            pmf: [],\n            cdf: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    updateStatistics() {\n        const newMean = this.props.mean(this.state.params);\n        this.setState({mean: newMean});\n        const newVariance = this.props.variance(this.state.params);\n        this.setState({variance: newVariance});\n        const newStd = this.props.std(this.state.params);\n        this.setState({std: newStd});\n    }\n\n    handleChange(event) {\n        const id = event.target.id;\n        const newValue = event.target.value;\n        const params = this.state.params;\n        params[id].value = newValue;\n        this.setState({params: params});\n    }\n\n    componentDidMount() {\n        this.updateStatistics();\n        this.drawChart();\n    }\n\n    isAllParamValid() {\n        return Object.keys(this.state.params).reduce((result, par) =>\n            result && this.state.params[par].isValid.valid, true);\n    }\n\n    drawChart() {\n        if (!this.isAllParamValid()) {\n            return;\n        }\n        this.updateStatistics();\n        const pmf = this.props.makePmfArray(this.state.params);\n        const cdf = makeCdfFromPmf(pmf);\n        this.setState({pmf: pmf, cdf: cdf});\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Typography style={{paddingLeft: 75, paddingTop: 20}}\n                            variant=\"h4\"\n                            color=\"textPrimary\"\n                            noWrap>\n                    {this.props.name}\n                </Typography>\n                <div>\n                    <form style={{paddingLeft: 70, paddingTop: 20}}\n                          className={classes.form_root} noValidate autoComplete=\"off\">\n                        {this.props.defaultParams.map(param =>\n                            <TextField key={param.name}\n                                       id={param.name} type=\"number\"\n                                       label={param.description}\n                                       value={this.state.params[param.name].value}\n                                       onChange={this.handleChange}\n                                       error={!this.state.params[param.name].isValid.valid}\n                                       helperText={this.state.params[param.name].isValid.valid ? \"\" :\n                                           this.state.params[param.name].isValid.message}\n                            />\n                        )}\n                        <br/>\n                        <Button style={{width: 100}}\n                                variant=\"contained\"\n                                onClick={() => this.drawChart()}\n                                disabled={!this.isAllParamValid()}>Calculate</Button>\n                    </form>\n                </div>\n                <div className={classes.grid_root}>\n                    <Grid container spacing={0} alignContent=\"center\">\n                        <Grid item xs={6}>\n                            <div className={classes.grid_names}>PMF</div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className={classes.grid_names}>CDF</div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <BarChart width={600} height={300} data={this.state.pmf}\n                                      margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                                <CartesianGrid strokeDasharray=\"3 3\"/>\n                                <XAxis dataKey=\"name\"/>\n                                <YAxis/>\n                                <Tooltip/>\n                                <Bar dataKey=\"prob\" name=\"P(X=x)\" fill=\"#009688\"/>\n                            </BarChart>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <BarChart width={600} height={300} data={this.state.cdf}\n                                      margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                                <CartesianGrid strokeDasharray=\"3 3\"/>\n                                <XAxis dataKey=\"name\"/>\n                                <YAxis/>\n                                <Tooltip/>\n                                <Bar dataKey=\"prob\" name=\"P(X<=x)\" fill=\"#009688\"/>\n                            </BarChart>\n                        </Grid>\n                        <Grid item xs={3} style={{paddingLeft: 70}}>\n                            <TextField key=\"mean\" id=\"mean\"\n                                       value={this.state.mean} label=\"Mean\"\n                                       inputProps={{readOnly: true}}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <TextField key=\"mean\" id=\"mean\"\n                                       value={this.state.variance}\n                                       label=\"Variance\"\n                                       inputProps={{readOnly: true}}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <TextField key=\"std\" id=\"std\"\n                                       value={this.state.std}\n                                       label=\"Standard deviation\"\n                                       inputProps={{readOnly: true}}/>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(combineStyles(formStyles, gridStyles))(DiscreteDistribution);","const formStyles = theme => ({\n    form_root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: 400,\n        },\n    },\n});\n\nexport {formStyles};\n\n","const gridStyles = _ => ({\n    grid_root: {\n        flexGrow: 1,\n    },\n    grid_names: {\n        textAlign: 'center'\n    }\n});\n\nexport {gridStyles}","import {nChooseK} from \"../distribution-math\";\n\n\nclass binomial {\n\n    constructor() {\n        throw new Error(\"This class is not supposed to instantiate\");\n    }\n\n    static pmf(n, k, p) {\n        return nChooseK(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n    }\n\n    static mean(n, p) {\n        return n * p;\n    }\n\n    static var(n, p) {\n        return n * p * (1 - p);\n    }\n\n    static std(n, p) {\n        return Math.sqrt(this.var(n, p));\n    }\n}\n\n\nexport default binomial;","import * as React from \"react\";\nimport DiscreteDistribution from \"./discrete-distribution\"\nimport {ComponentDistributionParam} from \"../model/dist-param\";\nimport binomial from \"../statistics/discrete/binomial\"\n\n\nclass Binomial extends React.Component {\n\n    makePmf(params) {\n        const result = [];\n        const p = params['p'].value;\n        const n = params['n'].value;\n        for (let k = 1; k <= n; k++) {\n            const prob = binomial.pmf(n, k, p);\n            result.push({'name': k.toString(), 'prob': prob});\n        }\n        return result;\n    }\n\n    mean(params) {\n        const p = params['p'].value;\n        const n = params['n'].value;\n        return binomial.mean(n, p);\n    }\n\n    variance(params) {\n        const p = params['p'].value;\n        const n = params['n'].value;\n        return binomial.var(n, p);\n    }\n\n    std(params) {\n        const p = params['p'].value;\n        const n = params['n'].value;\n        return binomial.std(n, p);\n    }\n\n\n    render() {\n        return (\n            <DiscreteDistribution\n                defaultParams={[new ComponentDistributionParam(\"p\", \"Probability of success in one trial\", 0.5, 0, 1),\n                    new ComponentDistributionParam(\"n\", \"Num of trials\", 10, 0)]}\n                makePmfArray={this.makePmf}\n                mean={this.mean}\n                variance={this.variance}\n                std={this.std}\n                name='Binomial'/>\n        )\n    }\n}\n\nexport default Binomial","class geometric {\n\n    constructor() {\n        throw new Error(\"This class is not supposed to instantiate\");\n    }\n\n    static pmf(k, p) {\n        return Math.pow((1 - p), k) * p;\n    }\n\n    static mean(p) {\n        return (1 - p) / p;\n    }\n\n    static var(p) {\n        return (1 - p) / Math.pow(p, 2);\n    }\n\n    static std(n, p) {\n        return Math.sqrt(this.var(n, p));\n    }\n}\n\nexport default geometric;","import * as React from \"react\";\nimport {ComponentDistributionParam} from \"../model/dist-param\";\nimport DiscreteDistribution from \"./discrete-distribution\";\nimport geometric from \"../statistics/discrete/geometric\";\n\nclass Geometric extends React.Component {\n\n    makePmf(params) {\n        const p = params['p'].value;\n        const pmf = [];\n        let k = 0;\n        let prob = geometric.pmf(k, p);\n        while (prob >= 1e-5 && k <= 500) {\n            pmf.push({'name': k.toString(), 'prob': prob});\n            k++;\n            prob = geometric.pmf(k, p);\n        }\n        return pmf;\n    }\n\n    mean(params) {\n        const p = params['p'].value;\n        return geometric.mean(p);\n    }\n\n    variance(params) {\n        const p = params['p'].value;\n        return geometric.var(p);\n    }\n\n    std(params) {\n        const p = params['p'].value;\n        return geometric.std(p);\n    }\n\n    render() {\n        return (\n            <DiscreteDistribution\n                defaultParams={[new ComponentDistributionParam(\"p\", \"Probability of success in one trial\", 0.5, 0, 1)]}\n                makePmfArray={this.makePmf}\n                mean={this.mean}\n                variance={this.variance}\n                std={this.std}\n                name='Geometric'/>\n        );\n    }\n}\n\nexport default Geometric;","import {nChooseK} from \"../distribution-math\";\n\nclass negative_binomial {\n\n    constructor() {\n        throw new Error(\"This class is not supposed to instantiate\");\n    }\n\n    static pmf(k, p, r) {\n        return nChooseK(k + r - 1, k) * Math.pow((1 - p), r) * Math.pow(p, k);\n    }\n\n    static mean(p, r) {\n        return p * r / (1 - p);\n    }\n\n    static var(p, r) {\n        return p * r / Math.pow((1 - p), 2);\n    }\n\n    static std(p, r) {\n        return Math.sqrt(this.var(p, r));\n    }\n}\n\n\nexport default negative_binomial;","import * as React from \"react\";\nimport {ComponentDistributionParam} from \"../model/dist-param\";\nimport DiscreteDistribution from \"./discrete-distribution\";\nimport negative_binomial from \"../statistics/discrete/negative_binomial\";\n\nclass NegativeBinomial extends React.Component {\n\n    makePmf(params) {\n        const p = params['p'].value;\n        //TODO react parse r as string, why?\n        const r = parseInt(params['r'].value);\n        const pmf = [];\n        let k = 0;\n        let prob = negative_binomial.pmf(k, p, r);\n        while (prob >= 1e-4 && k <= 500) {\n            pmf.push({'name': k.toString(), 'prob': prob});\n            k++;\n            prob = negative_binomial.pmf(k, p, r);\n        }\n        return pmf;\n    }\n\n    mean(params) {\n        const p = params['p'].value;\n        const r = params['r'].value;\n        return negative_binomial.mean(p, r);\n    }\n\n    variance(params) {\n        const p = params['p'].value;\n        const r = params['r'].value;\n        return negative_binomial.var(p, r);\n    }\n\n    std(params) {\n        const p = params['p'].value;\n        const r = params['r'].value;\n        return negative_binomial.std(p, r);\n    }\n\n    render() {\n        return (\n            <DiscreteDistribution\n                defaultParams={[new ComponentDistributionParam(\"p\", \"Probability of success in one trial\", 0.2, 0, 1),\n                    new ComponentDistributionParam(\"r\", \"Number of failures until the experiment is stopped\", 4, 0)]}\n                makePmfArray={this.makePmf}\n                mean={this.mean}\n                variance={this.variance}\n                std={this.std}\n                name='Negative Binomial'/>\n        );\n    }\n}\n\nexport default NegativeBinomial;","import {cachedFactorial} from \"../distribution-math\";\n\nclass poisson {\n\n    constructor() {\n        throw new Error(\"This class is not supposed to instantiate\");\n    }\n\n    static pmf(lambda, k) {\n        return Math.pow(lambda, k) * Math.pow(Math.E, -1 * lambda) / cachedFactorial(k);\n    }\n\n    static mean(lambda) {\n        return lambda\n    }\n\n    static var(lambda) {\n        return lambda;\n    }\n\n    static std(lambda) {\n        return Math.sqrt(this.var(lambda));\n    }\n}\n\nexport default poisson;","import * as React from \"react\";\nimport poisson from \"../statistics/discrete/poisson\";\nimport DiscreteDistribution from \"./discrete-distribution\";\nimport {ComponentDistributionParam} from \"../model/dist-param\";\n\nclass Poisson extends React.Component {\n\n    makePmf(params) {\n        const lambda = params['lambda'].value;\n        const pmf = [];\n        let k = 0;\n        let prob = poisson.pmf(lambda, k);\n        while (prob >= 1e-5 && k <= 50) {\n            pmf.push({'name': k.toString(), 'prob': prob});\n            k++;\n            prob = poisson.pmf(lambda, k);\n        }\n        return pmf;\n    }\n\n    mean(params) {\n        const lambda = params['lambda'].value;\n        return poisson.mean(lambda);\n    }\n\n    variance(params) {\n        const lambda = params['lambda'].value;\n        return poisson.var(lambda);\n    }\n\n    std(params) {\n        const lambda = params['lambda'].value;\n        return poisson.var(lambda);\n    }\n\n    render() {\n        return (\n            <DiscreteDistribution\n                defaultParams={[new ComponentDistributionParam(\"lambda\", \"Expected number of occurrences\", 4, 0)]}\n                makePmfArray={this.makePmf}\n                mean={this.mean}\n                variance={this.variance}\n                std={this.std}\n                name='Poisson'/>\n        )\n    }\n}\n\nexport default Poisson;","import React from 'react';\nimport Binomial from \"./distributions/Binomial\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {createMuiTheme, ThemeProvider, withStyles} from '@material-ui/core/styles';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\nimport Geometric from \"./distributions/Geometric\";\nimport NegativeBinomial from \"./distributions/NegativeBinomial\";\nimport blue from '@material-ui/core/colors/blue';\nimport Poisson from \"./distributions/Poisson\";\n\nconst distrMap = {\n    'binom': {name: 'Binomial', jcx: <Binomial/>},\n    'geom': {name: 'Geometric', jcx: <Geometric/>},\n    'negative_binom': {name: 'Negative Binomial', jcx: <NegativeBinomial/>},\n    'poisson': {name: 'Poisson', jcx: <Poisson/>}\n};\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    list: {\n        width: 350,\n    },\n    fullList: {\n        width: 'auto',\n    }\n});\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: {\n            main: '#009688',\n        },\n    },\n});\n\nclass App extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentGraph: 'binom',\n            sideOpen: false,\n            discrete: true\n        };\n        this.handleSelectDistribution = this.handleSelectDistribution.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.collapseDiscrete = this.collapseDiscrete.bind(this);\n    }\n\n    handleSelectDistribution(id) {\n        this.setState({currentGraph: id});\n        this.toggleDrawer();\n        // this.collapseDiscrete();\n    }\n\n    collapseDiscrete() {\n        this.setState(state => (\n            {discrete: !state.discrete}\n        ))\n    };\n\n    toggleDrawer() {\n        this.setState(state => ({\n            sideOpen: !state.sideOpen\n        }));\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <ThemeProvider theme={theme}>\n                    <Drawer anchor=\"left\"\n                            open={this.state.sideOpen}\n                            onClose={this.toggleDrawer}>\n                        <div role=\"presentation\"\n                             className={classes.list}>\n                            <ListItem button onClick={this.collapseDiscrete}>\n                                <ListItemText primary=\"Discrete\"/>\n                                {this.state.discrete ? <ExpandLess/> : <ExpandMore/>}\n                            </ListItem>\n                            <Collapse in={this.state.discrete} timeout=\"auto\" unmountOnExit>\n                                <List component=\"div\" disablePadding>\n                                    {Object.keys(distrMap).map(distr =>\n                                        <ListItem key={distr} button className={classes.nested}\n                                                  onClick={(_) => this.handleSelectDistribution(distr)}>\n                                            <ListItemText primary={distrMap[distr].name}/>\n                                        </ListItem>\n                                    )}\n                                </List>\n                            </Collapse>\n                        </div>\n                    </Drawer>\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" className={classes.menuButton}\n                                        color=\"inherit\" aria-label=\"menu\"\n                                        onClick={this.toggleDrawer}>\n                                <MenuIcon/>\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                Probability distributions\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                </ThemeProvider>\n                {distrMap[this.state.currentGraph].jcx}\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}